# Copyright 2020 ETH Zurich and University of Bologna.
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

# Run functional regression checks
name: ci
on:
  push:
    branches: ["main"]
  pull_request:
jobs:

  ########
  # Docs #
  ########

  docs:
    name: Build documentation
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/pulp-platform/snitch_cluster:main
    steps:
      - uses: actions/checkout@v2
      - name: Build docs
        run: make docs

  ##############################################
  # Simulate SW on Snitch Cluster w/ Verilator #
  ##############################################

  sw-snitch-cluster-vlt:
    name: Simulate SW on Snitch Cluster w/ Verilator
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/kuleuven-micas/snax:latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Install DNN Python Modules
        run: |
          pip3 install -r sw/dnn/requirements.txt
      - name: Build Software
        run: |
          bender vendor init
          make -C target/snitch_cluster sw
      - name: Build Hardware
        run: |
          make -C target/snitch_cluster bin/snitch_cluster.vlt
      - name: Run Tests
        working-directory: target/snitch_cluster
        run: |
          ./run.py --simulator verilator \
          sw/runtime.yaml sw/snitch-cluster-runtime.yaml sw/custom-fp.yaml \
          sw/standard-fp.yaml sw/openmp.yaml sw/snitch-cluster-openmp.yaml \
          sw/blas.yaml sw/dnn.yaml -j


  ##############################################
  # Simulate SW on SNAX Cluster w/ Verilator #
  ##############################################

  sw-snax-mac-cluster-vlt:
    name: Simulate SW on SNAX MAC Cluster w/ Verilator
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/kuleuven-micas/snax:latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Install DNN Python Modules
        run: |
          pip3 install -r sw/dnn/requirements.txt
      - name: Build Software
        run: |
          make CFG_OVERRIDE=cfg/snax-mac.hjson -C target/snitch_cluster sw
      - name: Build Hardware
        run: |
          make CFG_OVERRIDE=cfg/snax-mac.hjson \
          -C target/snitch_cluster bin/snitch_cluster.vlt
      - name: Run Tests
        working-directory: target/snitch_cluster
        run: |-
          ./run.py --simulator verilator \
          sw/runtime.yaml sw/custom-fp.yaml sw/standard-fp.yaml \
          sw/openmp.yaml sw/blas.yaml sw/dnn.yaml sw/snax-mac-run.yaml -j

  sw-snax-mac-cluster-vlt-generic:
    name: Simulate SW on SNAX MAC Cluster w/ Verilator (Generic LLVM)
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/kuleuven-micas/snax:latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Build Software
        run: |
          make -C target/snitch_cluster sw \
          CFG_OVERRIDE=cfg/snax-mac.hjson \
          SELECT_RUNTIME=rtl-generic \
          SELECT_TOOLCHAIN=llvm-generic
      - name: Build Hardware
        run: |
          make CFG_OVERRIDE=cfg/snax-mac.hjson \
          -C target/snitch_cluster bin/snitch_cluster.vlt
      - name: Run Tests
        working-directory: target/snitch_cluster
        run: |-
          ./run.py --simulator verilator \
          sw/runtime.yaml sw/standard-fp.yaml sw/snax-mac-run.yaml -j

  sw-snax-gemm-cluster-vlt:
    name: Simulate SW on SNAX GEMM Cluster w/ Verilator
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/kuleuven-micas/snax:latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Install DNN Python Modules
        run: |
          pip3 install -r sw/dnn/requirements.txt
      - name: Build Software
        run: |
          make CFG_OVERRIDE=cfg/snax-gemm.hjson -C target/snitch_cluster sw
      - name: Build Hardware
        run: |
          make CFG_OVERRIDE=cfg/snax-gemm.hjson \
          -C target/snitch_cluster bin/snitch_cluster.vlt
      - name: Run Tests
        working-directory: target/snitch_cluster
        run: |-
          ./run.py --simulator verilator \
          sw/runtime.yaml sw/custom-fp.yaml sw/standard-fp.yaml \
          sw/openmp.yaml sw/blas.yaml sw/dnn.yaml sw/snax-gemm-run.yaml -j

  sw-snax-gemm-cluster-vlt-generic:
    name: Simulate SW on SNAX GEMM Cluster w/ Verilator (Generic LLVM
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/kuleuven-micas/snax:latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Build Software
        run: |
          make -C target/snitch_cluster sw \
          SELECT_RUNTIME=rtl-generic \
          SELECT_TOOLCHAIN=llvm-generic \
          CFG_OVERRIDE=cfg/snax-gemm.hjson
      - name: Build Hardware
        run: |
          make CFG_OVERRIDE=cfg/snax-gemm.hjson \
          -C target/snitch_cluster bin/snitch_cluster.vlt
      - name: Run Tests
        working-directory: target/snitch_cluster
        run: |-
          ./run.py --simulator verilator \
          sw/runtime.yaml sw/standard-fp.yaml sw/snax-gemm-run.yaml -j

  sw-snax-streamer-gemm-cluster-vlt-generic:
    name: Simulate SW on SNAX Streamer GEMM Cluster w/ Verilator (Generic LLVM)
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/kuleuven-micas/snax:latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Build Software
        run: |
          make -C target/snitch_cluster sw \
          SELECT_RUNTIME=rtl-generic \
          SELECT_TOOLCHAIN=llvm-generic \
          CFG_OVERRIDE=cfg/snax-streamer-gemm.hjson
      - name: Build Hardware
        run: |
          make CFG_OVERRIDE=cfg/snax-streamer-gemm.hjson \
          -C target/snitch_cluster bin/snitch_cluster.vlt
      - name: Run Tests
        working-directory: target/snitch_cluster
        run: |-
          ./run.py --simulator verilator \
          sw/runtime.yaml sw/standard-fp.yaml sw/snax-streamer-gemm-run.yaml -j

  sw-snax-mac-mult-cluster-vlt-generic:
    name: Simulate SW on SNAX Multiple MAC Cluster w/ Verilator (Generic LLVM)
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/kuleuven-micas/snax:latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Build Software
        run: |
          make -C target/snitch_cluster sw \
          CFG_OVERRIDE=cfg/snax-mac-mult.hjson \
          SELECT_RUNTIME=rtl-generic \
          SELECT_TOOLCHAIN=llvm-generic
      - name: Build Hardware
        run: |
          make CFG_OVERRIDE=cfg/snax-mac-mult.hjson \
          -C target/snitch_cluster bin/snitch_cluster.vlt
      - name: Run Tests
        working-directory: target/snitch_cluster
        run: |-
          ./run.py --simulator verilator \
          sw/runtime.yaml sw/standard-fp.yaml sw/snax-mac-run.yaml \
          sw/snax-mac-mult-run.yaml -j

  ############################################
  # Build SW on Snitch Cluster w/ Banshee #
  #########################################

  sw-snitch-cluster-banshee:
    name: Simulate SW on Snitch Cluster w/ Banshee
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/pulp-platform/snitch_cluster:main
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Install DNN Python Modules
        run: |
          pip3 install -r sw/dnn/requirements.txt
      - name: Build Software
        run: |
          bender vendor init
          make -C target/snitch_cluster SELECT_RUNTIME=banshee sw
      - name: Run Tests
        env:
          SNITCH_LOG: info
        working-directory: target/snitch_cluster
        run: |
          ./run.py --simulator banshee \
          sw/runtime.yaml sw/snitch-cluster-runtime.yaml sw/custom-fp.yaml \
          sw/standard-fp.yaml sw/openmp.yaml sw/snitch-cluster-openmp.yaml \
          sw/blas.yaml sw/dnn.yaml -j
